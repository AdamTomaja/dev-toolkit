//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.19 at 08:01:52 PM CEST 
//


package com.cydercode.devtoolkit.configuration.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{https://cydercode.com/dev-toolkit/}groups" minOccurs="0"/>
 *         &lt;element ref="{https://cydercode.com/dev-toolkit/}applications" minOccurs="0"/>
 *         &lt;element ref="{https://cydercode.com/dev-toolkit/}parameters" minOccurs="0"/>
 *         &lt;element ref="{https://cydercode.com/dev-toolkit/}presets" minOccurs="0"/>
 *         &lt;element ref="{https://cydercode.com/dev-toolkit/}scripts" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "groups",
    "applications",
    "parameters",
    "presets",
    "scripts"
})
@XmlRootElement(name = "dev-toolkit")
public class DevToolkit
    implements Equals, HashCode, ToString
{

    protected Groups groups;
    protected Applications applications;
    protected Parameters parameters;
    protected Presets presets;
    protected Scripts scripts;

    /**
     * Gets the value of the groups property.
     * 
     * @return
     *     possible object is
     *     {@link Groups }
     *     
     */
    public Groups getGroups() {
        return groups;
    }

    /**
     * Sets the value of the groups property.
     * 
     * @param value
     *     allowed object is
     *     {@link Groups }
     *     
     */
    public void setGroups(Groups value) {
        this.groups = value;
    }

    /**
     * Gets the value of the applications property.
     * 
     * @return
     *     possible object is
     *     {@link Applications }
     *     
     */
    public Applications getApplications() {
        return applications;
    }

    /**
     * Sets the value of the applications property.
     * 
     * @param value
     *     allowed object is
     *     {@link Applications }
     *     
     */
    public void setApplications(Applications value) {
        this.applications = value;
    }

    /**
     * Gets the value of the parameters property.
     * 
     * @return
     *     possible object is
     *     {@link Parameters }
     *     
     */
    public Parameters getParameters() {
        return parameters;
    }

    /**
     * Sets the value of the parameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Parameters }
     *     
     */
    public void setParameters(Parameters value) {
        this.parameters = value;
    }

    /**
     * Gets the value of the presets property.
     * 
     * @return
     *     possible object is
     *     {@link Presets }
     *     
     */
    public Presets getPresets() {
        return presets;
    }

    /**
     * Sets the value of the presets property.
     * 
     * @param value
     *     allowed object is
     *     {@link Presets }
     *     
     */
    public void setPresets(Presets value) {
        this.presets = value;
    }

    /**
     * Gets the value of the scripts property.
     * 
     * @return
     *     possible object is
     *     {@link Scripts }
     *     
     */
    public Scripts getScripts() {
        return scripts;
    }

    /**
     * Sets the value of the scripts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Scripts }
     *     
     */
    public void setScripts(Scripts value) {
        this.scripts = value;
    }

    public DevToolkit withGroups(Groups value) {
        setGroups(value);
        return this;
    }

    public DevToolkit withApplications(Applications value) {
        setApplications(value);
        return this;
    }

    public DevToolkit withParameters(Parameters value) {
        setParameters(value);
        return this;
    }

    public DevToolkit withPresets(Presets value) {
        setPresets(value);
        return this;
    }

    public DevToolkit withScripts(Scripts value) {
        setScripts(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DevToolkit)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DevToolkit that = ((DevToolkit) object);
        {
            Groups lhsGroups;
            lhsGroups = this.getGroups();
            Groups rhsGroups;
            rhsGroups = that.getGroups();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "groups", lhsGroups), LocatorUtils.property(thatLocator, "groups", rhsGroups), lhsGroups, rhsGroups)) {
                return false;
            }
        }
        {
            Applications lhsApplications;
            lhsApplications = this.getApplications();
            Applications rhsApplications;
            rhsApplications = that.getApplications();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applications", lhsApplications), LocatorUtils.property(thatLocator, "applications", rhsApplications), lhsApplications, rhsApplications)) {
                return false;
            }
        }
        {
            Parameters lhsParameters;
            lhsParameters = this.getParameters();
            Parameters rhsParameters;
            rhsParameters = that.getParameters();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parameters", lhsParameters), LocatorUtils.property(thatLocator, "parameters", rhsParameters), lhsParameters, rhsParameters)) {
                return false;
            }
        }
        {
            Presets lhsPresets;
            lhsPresets = this.getPresets();
            Presets rhsPresets;
            rhsPresets = that.getPresets();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "presets", lhsPresets), LocatorUtils.property(thatLocator, "presets", rhsPresets), lhsPresets, rhsPresets)) {
                return false;
            }
        }
        {
            Scripts lhsScripts;
            lhsScripts = this.getScripts();
            Scripts rhsScripts;
            rhsScripts = that.getScripts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "scripts", lhsScripts), LocatorUtils.property(thatLocator, "scripts", rhsScripts), lhsScripts, rhsScripts)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Groups theGroups;
            theGroups = this.getGroups();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "groups", theGroups), currentHashCode, theGroups);
        }
        {
            Applications theApplications;
            theApplications = this.getApplications();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applications", theApplications), currentHashCode, theApplications);
        }
        {
            Parameters theParameters;
            theParameters = this.getParameters();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parameters", theParameters), currentHashCode, theParameters);
        }
        {
            Presets thePresets;
            thePresets = this.getPresets();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "presets", thePresets), currentHashCode, thePresets);
        }
        {
            Scripts theScripts;
            theScripts = this.getScripts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "scripts", theScripts), currentHashCode, theScripts);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Groups theGroups;
            theGroups = this.getGroups();
            strategy.appendField(locator, this, "groups", buffer, theGroups);
        }
        {
            Applications theApplications;
            theApplications = this.getApplications();
            strategy.appendField(locator, this, "applications", buffer, theApplications);
        }
        {
            Parameters theParameters;
            theParameters = this.getParameters();
            strategy.appendField(locator, this, "parameters", buffer, theParameters);
        }
        {
            Presets thePresets;
            thePresets = this.getPresets();
            strategy.appendField(locator, this, "presets", buffer, thePresets);
        }
        {
            Scripts theScripts;
            theScripts = this.getScripts();
            strategy.appendField(locator, this, "scripts", buffer, theScripts);
        }
        return buffer;
    }

}
