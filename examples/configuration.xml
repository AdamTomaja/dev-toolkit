<?xml version="1.0" encoding="UTF-8"?>
<dev-toolkit xmlns="https://cydercode.com/dev-toolkit/">
    <groups>
        <group name="Git">
            <description>Version Control Operations</description>
        </group>
        <group name="Maven"/>
    </groups>

    <applications>
        <application name="mvn">
            <path>mvn</path>
        </application>
        <application name="git">
            <path>git</path>
        </application>
        <application name="echo">
            <path>echo</path>
        </application>
    </applications>

    <parameters>
        <parameter name="project-dir">
            <type>string</type>
            <default>/home/mint/work/git/dev-toolkit/</default>
            <values>
                <value>/home/mint/work/git/dev-toolkit/</value>
                <value>/home/mint/work/git/project-2/</value>
                <value>/home/mint/work/git/project-3</value>
            </values>
            <group>Maven</group>
        </parameter>
        <parameter name="repo-dir">
            <type>string</type>
            <default>/home/mint/work/git/dev-toolkit/</default>
            <group>Git</group>
        </parameter>
        <parameter name="branch">
            <type>string</type>
            <default>master</default>
            <group>Git</group>
        </parameter>
    </parameters>

    <presets>
        <preset name="Clean">
            <application>mvn</application>
            <cmd>-f ${project-dir} clean</cmd>
            <group>Maven</group>
        </preset>
        <preset name="Install">
            <application>mvn</application>
            <cmd>-f ${project-dir} install</cmd>
            <group>Maven</group>
        </preset>
        <preset name="Package">
            <application>mvn</application>
            <cmd>-f ${project-dir} package</cmd>
            <group>Maven</group>
        </preset>
        <preset name="Test">
            <application>mvn</application>
            <cmd>-f ${project-dir} test</cmd>
            <group>Maven</group>
        </preset>
        <preset name="Deploy">
            <application>mvn</application>
            <cmd>-f ${project-dir} deploy</cmd>
            <group>Maven</group>
        </preset>
        <preset name="Pull">
            <application>git</application>
            <cmd>-C ${repo-dir} pull</cmd>
            <group>Git</group>
        </preset>
        <preset name="Push">
            <application>git</application>
            <cmd>-C ${repo-dir} push</cmd>
            <group>Git</group>
        </preset>
        <preset name="Show remotes">
            <application>git</application>
            <cmd>-C ${repo-dir} remote -v</cmd>
            <group>Git</group>
        </preset>
        <preset name="Status">
            <application>git</application>
            <cmd>-C ${repo-dir} status</cmd>
            <group>Git</group>
            <qtoolbox>true</qtoolbox>
        </preset>
        <preset name="All-Git-With-Ignorable">
            <child-presets>
                <child-preset>
                    <preset>Show remotes</preset>
                    <ignorable>false</ignorable>
                </child-preset>
                <child-preset>
                    <preset>Status</preset>
                    <ignorable>false</ignorable>
                </child-preset>
                <child-preset>
                    <preset>Pull</preset>
                    <ignorable>false</ignorable>
                </child-preset>
            </child-presets>
        </preset>
        <preset name="Environment variable echo">
            <application>echo</application>
            <cmd>SHELL value: ${SHELL} ${my-custom-calculated-parameter}</cmd>
        </preset>
    </presets>
    <scripts>
        <script name="my-script">
            <code><![CDATA[
    api.setParameter("my-custom-calculated-parameter", "parameter-value");
    api.println("Hello World!");
]]></code>
        </script>
    </scripts>
</dev-toolkit>